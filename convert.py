# -*- coding: UTF-8 -*-

# Convert results generated by auto-size.sh or auto-windows.sh to gif.

import os
import imageio
 
def create_gif(image_list, gif_name):
 
	frames = []
	bigger_times = 4
	image_num = 0
	for image_name in image_list:
		print(image_name)
		frame = imageio.imread(image_name)
		bigger_frame = []
		for row in frame:
			bigger_row = []
			for pixel in row:
				for i in range(bigger_times):
					bigger_row.append(pixel)
			for i in range(bigger_times):
				bigger_frame.append(bigger_row)
		if image_name.endswith('bmp'):
			for row in range(int(len(bigger_frame)/20)):
				bigger_frame.append([ [0, 0, 0] for pixel in bigger_frame[0] ])
				for pixel in range( int(len(bigger_frame[0])/len(image_list)*image_num), int(len(bigger_frame[0])/len(image_list)*(image_num+1)) ):
					bigger_frame[-1][pixel] = [255, 255, 255]
		image_num += 1
		frames.append(bigger_frame)
	# Save them as frames into a gif
	imageio.mimsave(gif_name, frames, 'GIF', duration = 1)
	return
 
def main():
	path = r'./result-2020-09-08-19.04.45'
	sub_dir_list = [ path+'/'+dir for dir in  os.listdir(path)]
	sub_dir_contain = []
	for dir in sub_dir_list:
		if (os.path.isdir(dir)):
			sub_dir_contain += [ dir+'/'+file for file in os.listdir(dir)]
	for bmp_name, gif_name in [ ['send.bmp', path + r'/send.gif'], 
								['recv.bmp', path + r'/recv.gif'], 
								['send_hist.png', path + r'/send_hist.gif'], 
								['recv_hist.png', path + r'/recv_hist.gif'] ]:
		image_list = []
		for image_name in sub_dir_contain:
			if image_name.endswith(bmp_name):
				image_list.append(image_name)
		create_gif(image_list, gif_name)
 
if __name__ == "__main__":
	main()